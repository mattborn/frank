i want to craft another sim similar to ../_LEVELS/mitt-today/sim.js which uses code in shared.js (same directory) that fakes the end-to-end process of compiling daily fantasy data from a variety of sources. the first source uses a url scheme like https://fantasyfootballcalculator.com/adp/csv/half-ppr.csv?teams=10&position=all and i can provide the enums for all the query parameters we want to support. lets document sources in a README and mention this site uses fantasydata.com and sportsdata.io api. the main downside to this data source is the mock drafts are proprietary and not a consensus/composite like FantasyPros. eventually, we’ll attempt to get adp data for popular leagues like ESPN, NFL, Sleeper, and Yahoo, but for now we’ll just fake these in the sim. the idea is we are going to build a complex matrix of data attaching new fields to a primary key that matches each player name with some sort of minimalist uniform formatting like "Amon-Ra St. Brown" meaning we support hyphens, periods, and spaces. i want to write and load as few flat data files as possible and only refactor as performance issues arise. please draft the first sim. keep code as lightweight and minimal as possible.

ok so now we need a ui. i want a simple jamstack using index.html, styles.css, and scripts.js (all in the head with defer to load later) with two views board and list for just the 250 players in our fcc adp data. for testing purposes, i also want to cache all the images locally so lets add an images folder inside the data folder and create a new images.js script that uses the espncdn url from before and the espn_ids in our generated players.json file to download all those. and i want the ui to use rounded cards with the backgrounds set to the player image and fully covered. and print all the fields we have so far inside the card. keep the code as minimalist as possible.
